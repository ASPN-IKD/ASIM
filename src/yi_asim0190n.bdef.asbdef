managed implementation in class zbp_i_asim0190n unique;
strict ( 1 );

define behavior for YI_ASIM0190N //alias <alias_name>
persistent table zasimt0190n
lock master
authorization master ( instance )
//etag master <field_name>
{
  create;
  update;
  delete;
  association _Item { create; }


  determination create_number on save { create; }

  action delete_contract;

  field ( numbering : managed, readonly )
  UUid;

  field ( readonly )
  ChkFollow;
  mapping for zasimt0190n
    {
      uuid               = uuid;
      eccno              = eccno;
      eccyr              = eccyr;
      reqmu              = reqmu;
      reqno              = reqno;
      reqyr              = reqyr;
      reqdt              = reqdt;
      blino              = blino;
      bliyr              = bliyr;
      loekz              = loekz;
      bukrs              = bukrs;
      ekorg              = ekorg;
      eccdt              = eccdt;
      egrdt              = egrdt;
      eccmrn             = eccmrn;
      ecctrn             = ecctrn;
      eccwmn             = eccwmn;
      ccldt              = ccldt;
      cclgort            = cclgort;
      cclog              = cclog;
      quacdyn            = quacdyn;
      CreatedType        = created_type;
      createdby          = created_by;
      createdat          = created_at;
      lastchangedby      = last_changed_by;
      lastchangedat      = last_changed_at;
      locallastchangedat = local_last_changed_at;
    }
}

define behavior for YI_ASIM0201N //alias <alias_name>
persistent table zasimt0200n
lock dependent by _Head
authorization dependent by _Head
//etag master <field_name>
{
  update;
  delete;
  field ( numbering : managed )
  UUid;
  field ( readonly ) Parentuuid;

  determination calc_value on save { create; update; }

  association _Head;
  mapping for zasimt0200n
    {
      Uuid       = uuid;
      Parentuuid = parentuuid;
      Quars      = quars;
      Quacd      = quacd;
      Quadt      = quadt;
      Failmng    = failmng;
      Failmng1   = failmng1;
      Eccmng     = eccmng;
      Sampmng    = sampmng;
      Sampmng1   = sampmng1;
      Eccmns     = eccmns;
      eccmns1    = eccmns1;
    }
}