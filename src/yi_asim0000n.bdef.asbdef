managed implementation in class zbp_i_asim0000n unique;
strict ( 1 );

define behavior for YI_ASIM0000N //alias <alias_name>
persistent table zasimt0000n
lock master
authorization master ( instance )
//etag master <field_name>
{

  field ( numbering : managed, readonly )
  UUid;

  create;
  update;
  delete;
  association _0001N { create; }

  mapping for zasimt0000n
  {
    Uuid = uuid;
    Zcode = zcode;
    Ztext = ztext;
    Zvalu1t = zvalu1t;
    Zvalu2t = zvalu2t;
    Zvalu3t = zvalu3t;
    Zvalu4t = zvalu4t;
    Zvalu5t = zvalu5t;
    Zvalu6t = zvalu6t;
    Zvalu7t = zvalu7t;
  }
}

define behavior for YI_ASIM0001N //alias <alias_name>
persistent table zasimt0001n
lock dependent by _0000N
authorization dependent by _0000N
//etag master <field_name>
{
  update;
  delete;
  field ( numbering : managed, readonly )
  Uuid;

  field ( readonly ) Parentuuid;
  association _0000N;

  mapping for zasimt0001n
  {
    Parentuuid = parentuuid;
    Uuid = uuid;
    Zcdno = zcdno;
    Zcode = zcode;
    Ztext = ztext;
    Zvalu1 = zvalu1;
    Zvalu2 = zvalu2;
    Zvalu3 = zvalu3;
    Zvalu4 = zvalu4;
    Zvalu5 = zvalu5;
    Zvalu6 = zvalu6;
    Zvalu7 = zvalu7;
  }
}